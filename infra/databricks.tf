# 1) Service Principal no workspace
resource "databricks_service_principal" "genie" {
  display_name          = "Genie M365 Integration"
  active                = true
  workspace_access      = true
  databricks_sql_access = true
}

# 2) OAuth Client Secret
resource "databricks_service_principal_secret" "genie_oauth" {
  service_principal_id = databricks_service_principal.genie.id
}

# 3) Grant CAN_RUN on Genie Space to the SP (Workspace Permissions API)
resource "null_resource" "grant_space_can_run" {
  triggers = {
    space_id  = var.databricks_space_id
    sp_id     = databricks_service_principal.genie.id
    host      = var.databricks_host
    token_sha = sha256(var.databricks_token)
  }

  provisioner "local-exec" {
    interpreter = ["/bin/sh", "-c"]
    command     = <<EOF
set -eu

HOST="${var.databricks_host}"
TOKEN="${var.databricks_token}"
SPACE="${var.databricks_space_id}"
# For permissions API, service_principal_name should be the AAD application (client) ID (GUID)
SPN="${databricks_service_principal.genie.application_id}"

# Trim trailing slash (note the $$ to escape Bash for Terraform)
HOST="$${HOST%/}"

TMP="./grant_space_can_run.body.json"

# Build request body: Workspace Permissions API expects "service_principal_name" + "permission_level"
BODY=$(printf '%s' '{"access_control_list":[{"service_principal_name":"'"$SPN"'","permission_level":"CAN_RUN"}]}')

HTTP_CODE=$(curl -fsS -w '%%{http_code}' -o "$TMP" \
  -X PATCH "$HOST/api/2.0/permissions/genie/$SPACE" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" \
  -d "$BODY")

printf 'PATCH /api/2.0/permissions/genie/%s -> HTTP %s\n' "$SPACE" "$HTTP_CODE"
head -c 400 "$TMP" || true; echo

case "$HTTP_CODE" in 2??) exit 0 ;; *) exit 1 ;; esac
EOF
  }

  depends_on = [databricks_service_principal.genie]
}


# 4) Exporta Client ID / Secret em arquivo local
resource "null_resource" "secrets_dir_genie" {
  provisioner "local-exec" {
    command = "mkdir -p ./secrets"
  }
}

resource "local_file" "genie_sp_credentials" {
  filename = "./secrets/genie_m365_integration.json"
  content = jsonencode({
    service_principal_name = databricks_service_principal.genie.display_name
    client_id              = databricks_service_principal.genie.application_id
    client_secret          = databricks_service_principal_secret.genie_oauth.secret
    note                   = "Generated by Terraform"
  })
  depends_on = [
    null_resource.secrets_dir_genie,
    databricks_service_principal_secret.genie_oauth
  ]

  # Sugestão: permissions mais restritivas por segurança
  file_permission      = "0600"
  directory_permission = "0700"
}
